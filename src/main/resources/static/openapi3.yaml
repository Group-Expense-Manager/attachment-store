openapi: 3.0.1
info:
  title: Attachment API
  version: v1
  description: API for managing user and group attachments.

servers:
  - url: http://localhost:8080
    description: Development server

paths:
  /external/users/{userId}/attachments/{attachmentId}:
    get:
      tags:
        - External User
      operationId: GetExternalUserAttachment
      summary: Retrieve a user attachment.
      description: Fetches the specified attachment for a user.
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AttachmentId'
      requestBody:
        $ref: '#/components/requestBodies/Base64EncodedAttachment'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentRetrieved'
  /external/users/:
    post:
      tags:
        - External User
      operationId: PostExternalUserAttachment
      summary: Upload a new attachment for a user.
      requestBody:
        $ref: '#/components/requestBodies/Base64EncodedAttachment'
      responses:
        "201":
          description: "Created"
          content:
            application/vnd.gem.internal.v1+json:
              schema:
                $ref: "#/components/schemas/AttachmentResponse"
  /external/users/attachments/{attachmentId}:
    put:
      tags:
        - External User
      operationId: updateUserAttachment
      summary: Update a user attachment.
      description: Updates the specified attachment for the given user.
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/AttachmentId'
      requestBody:
        $ref: '#/components/requestBodies/Base64EncodedAttachment'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentUpdated'
        '400':
          $ref: '#/components/responses/InvalidAttachmentData'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/UserAttachmentNotFound'

  /external/groups/{groupId}/attachments/{attachmentId}:
    get:
      tags:
        - External Group
      operationId: getGroupAttachment
      summary: Retrieve a group attachment.
      description: Fetches the specified attachment for a group.
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/AttachmentId'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentRetrieved'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GroupAttachmentNotFound'
    put:
      tags:
        - External Group
      operationId: updateGroupAttachment
      summary: Update a group attachment.
      description: Updates the specified attachment for a given group.
      parameters:
        - $ref: '#/components/parameters/UserId'
        - $ref: '#/components/parameters/GroupId'
        - $ref: '#/components/parameters/AttachmentId'
      requestBody:
        $ref: '#/components/requestBodies/Base64EncodedAttachment'
      responses:
        '200':
          $ref: '#/components/responses/AttachmentUpdated'
        '400':
          $ref: '#/components/responses/InvalidAttachmentData'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/GroupAttachmentNotFound'

  /internal/users/{userId}/generate:
    post:
      tags:
        - Internal User
      operationId: generateUserAttachment
      summary: Generate a user attachment.
      description: Creates a new attachment for the specified user.
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '201':
          $ref: '#/components/responses/AttachmentGenerated'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    UserId:
      name: userId
      in: query
      required: true
      schema:
        type: string
        example: "12345"
      description: The ID of the user.
    GroupId:
      name: groupId
      in: path
      required: true
      schema:
        type: string
        example: "67890"
      description: The ID of the group.
    AttachmentId:
      name: attachmentId
      in: path
      required: true
      schema:
        type: string
        example: "a1b2c3d4e5"
      description: The ID of the attachment.

  requestBodies:
    Base64EncodedAttachment:
      required: true
      content:
        application/json:
          schema:
            type: string
            format: byte
          examples:
            exampleAttachment:
              value: "BASE64_ENCODED_ATTACHMENT_DATA"

  responses:
    UserAttachmentResponse:
      description: User attachment response.
      content:
        application/vnd.gem.internal.v1+json:
          schema:
            $ref: '#/components/schemas/AttachmentResponse'
          examples:
            exampleUserAttachment:
              value:
                  id: "94d93de-9cf2-4f00-8a48-d1c7a8ef0200"
    AttachmentUpdated:
      description: Attachment updated successfully.
      content:
        application/vnd.gem.internal.v1+json:
          schema:
            $ref: '#/components/schemas/AttachmentResponse'
          examples:
            exampleUpdated:
              value:
                id: "c9b6c971-54c2-4b41-bf65-227939e725ca"
    AttachmentRetrieved:
      description: Attachment retrieved successfully.
      content:
        application/vnd.gem.internal.v1+json:
          schema:
            type: string
            format: byte
          examples:
            exampleRetrieved:
              value: "BASE64_ENCODED_ATTACHMENT_DATA"
    AttachmentGenerated:
      description: Attachment generated successfully.
      content:
        application/vnd.gem.internal.v1+json:
          schema:
            $ref: '#/components/schemas/AttachmentResponse'
          examples:
            exampleGenerated:
              value:
                id: "76d2251c-d4ae-4f00-b7d6-971f551adea6"
    UserAttachmentNotFound:
      description: User or attachment not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorsHolder'
          examples:
            exampleNotFound:
              value:
                errors:
                  - code: "NOT_FOUND"
                    message: "User or attachment not found."
    GroupAttachmentNotFound:
      description: Group or attachment not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorsHolder'
          examples:
            exampleNotFound:
              value:
                errors:
                  - code: "NOT_FOUND"
                    message: "Group or attachment not found."
    InvalidAttachmentData:
      description: Invalid attachment data.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorsHolder'
          examples:
            exampleInvalidData:
              value:
                errors:
                  - code: "INVALID_DATA"
                    message: "Attachment data is invalid."
    Forbidden:
      description: Forbidden. Likely due to permission issues.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorsHolder'
          examples:
            exampleForbidden:
              value:
                errors:
                  - code: "FORBIDDEN"
                    message: "You do not have permission to perform this action."
    InternalServerError:
      description: Internal server error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleErrorsHolder'
          examples:
            exampleServerError:
              value:
                errors:
                  - code: "INTERNAL_ERROR"
                    message: "An internal server error occurred."

  schemas:
    AttachmentResponse:
      type: object
      properties:
        id:
          type: string
          description: The ID of the attachment.
      example:
        id: "94d93de-9cf2-4f00-8a48-d1c7a8ef0200"
    SimpleErrorsHolder:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/SimpleError'
      example:
        errors:
          - code: "ERROR_CODE"
            message: "Error message describing the issue."
    SimpleError:
      type: object
      properties:
        code:
          type: string
          nullable: true
          description: Error code.
        message:
          type: string
          nullable: true
          description: Error message.
        details:
          type: string
          nullable: true
          description: Additional error details.
        path:
          type: string
          nullable: true
          description: The API path related to the error.
        userMessage:
          type: string
          nullable: true
          description: A user-friendly error message.
      example:
        code: "VALIDATION_ERROR"
        message: "Invalid input data."
        details: "VALIDATION_ERROR"
        userMessage: "Please provide a valid email."
